<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Activate Table(flashlight and oxygen)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Game   : MoonMan-Win64-Shipping.exe
  Version: 1.3.1.18219-CODEX
  Date   : 20.04.2020
  Author : AJlex

  This script does blah blah blah
}
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(activateTable, MoonMan-Win64-Shipping.exe, 48 89 44 24 20 48 8B 11 FF 52 08)
alloc(newmem,2048,activateTable)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [rsp+20],rax

cmp byte ptr [rcx+D4],1
jne oxygen
cmp byte ptr [flashlightFlag],1
jne oxygen
// flashlight
mov [rcx+D0],(float)1
jmp returnhere

oxygen:
cmp [rcx+D4],(float)100
jne exit
cmp [rcx+D0],0
je exit
cmp byte ptr [oxygenFlag],1
jne exit
// oxygen
mov [rcx+D0],(float)180

exit:
jmp returnhere

flashlightFlag:
db 0

oxygenFlag:
db 0

activateTable:
jmp newmem
returnhere:


registerSymbol(flashlightFlag)
registerSymbol(oxygenFlag)
registerSymbol(activateTable)
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
activateTable:
db 48 89 44 24 20
unregisterSymbol(flashlightFlag)
unregisterSymbol(oxygenFlag)
unregisterSymbol(activateTable)
dealloc(newmem)
{
// ORIGINAL CODE - INJECTION POINT: "MoonMan-Win64-Shipping.exe"+1826DDF

"MoonMan-Win64-Shipping.exe"+1826DBA: F3 0F 10 50 3C           -  movss xmm2,[rax+3C]
"MoonMan-Win64-Shipping.exe"+1826DBF: 0F 2F D3                 -  comiss xmm2,xmm3
"MoonMan-Win64-Shipping.exe"+1826DC2: 72 07                    -  jb MoonMan-Win64-Shipping.exe+1826DCB
"MoonMan-Win64-Shipping.exe"+1826DC4: 0F 28 C8                 -  movaps xmm1,xmm0
"MoonMan-Win64-Shipping.exe"+1826DC7: F3 0F 5C CA              -  subss xmm1,xmm2
"MoonMan-Win64-Shipping.exe"+1826DCB: F3 0F 11 40 3C           -  movss [rax+3C],xmm0
"MoonMan-Win64-Shipping.exe"+1826DD0: 44 8B CD                 -  mov r9d,ebp
"MoonMan-Win64-Shipping.exe"+1826DD3: 48 8B 4F 10              -  mov rcx,[rdi+10]
"MoonMan-Win64-Shipping.exe"+1826DD7: 48 8D 47 40              -  lea rax,[rdi+40]
"MoonMan-Win64-Shipping.exe"+1826DDB: 44 8B 47 1C              -  mov r8d,[rdi+1C]
// ---------- INJECTING HERE ----------
"MoonMan-Win64-Shipping.exe"+1826DDF: 48 89 44 24 20           -  mov [rsp+20],rax
// ---------- DONE INJECTING  ----------
"MoonMan-Win64-Shipping.exe"+1826DE4: 48 8B 11                 -  mov rdx,[rcx]
"MoonMan-Win64-Shipping.exe"+1826DE7: FF 52 08                 -  call qword ptr [rdx+08]
"MoonMan-Win64-Shipping.exe"+1826DEA: 48 8B 47 10              -  mov rax,[rdi+10]
"MoonMan-Win64-Shipping.exe"+1826DEE: 33 F6                    -  xor esi,esi
"MoonMan-Win64-Shipping.exe"+1826DF0: 48 89 70 18              -  mov [rax+18],rsi
"MoonMan-Win64-Shipping.exe"+1826DF4: 40 88 77 38              -  mov [rdi+38],sil
"MoonMan-Win64-Shipping.exe"+1826DF8: 0F AE                    -  sfence
"MoonMan-Win64-Shipping.exe"+1826DFA: F8                       -  clc
"MoonMan-Win64-Shipping.exe"+1826DFB: 48 8B 4F 40              -  mov rcx,[rdi+40]
"MoonMan-Win64-Shipping.exe"+1826DFF: 44 8B C5                 -  mov r8d,ebp
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1966</ID>
      <Description>"godmode"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Game   : MoonMan-Win64-Shipping.exe
  Version: 1.3.1.18219-CODEX
  Date   : 20.04.2020
  Author : AJlex

  This script does blah blah blah
}
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(player, MoonMan-Win64-Shipping.exe, 4C 8B 0B 4D 8B C4 48 8B D0 48 8B CB)
alloc(newmem,2048,player)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [playerPointer],rbx

originalcode:
mov r9,[rbx]
mov r8,r12

exit:
jmp returnhere

playerPointer:
dq 0

player:
jmp newmem
nop
returnhere:

registerSymbol(player)
registerSymbol(playerPointer)
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(godmode, MoonMan-Win64-Shipping.exe, 41 FF 54 C5 00 48 85 DB)
alloc(newmem1,2048,godmode)
label(returnhere1)
label(originalcode1)
label(exit1)

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode1:
call qword ptr [r13+rax*8+00]

push rcx
mov rcx,[playerPointer]
add rcx,190
cmp rax,rcx
jne exit1
mov [rax],(float)1

exit1:
pop rcx
jmp returnhere1

godmode:
jmp newmem1
returnhere1:

registerSymbol(godmode)
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
player:
db 4C 8B 0B 4D 8B C4
unregisterSymbol(player)
unregisterSymbol(playerPointer)
dealloc(newmem)
{
// ORIGINAL CODE - INJECTION POINT: "MoonMan-Win64-Shipping.exe"+23C269

"MoonMan-Win64-Shipping.exe"+23C245: 48 85 C0              -  test rax,rax
"MoonMan-Win64-Shipping.exe"+23C248: 49 0F 45 FD           -  cmovne rdi,r13
"MoonMan-Win64-Shipping.exe"+23C24C: 48 0B F8              -  or rdi,rax
"MoonMan-Win64-Shipping.exe"+23C24F: 48 03 FE              -  add rdi,rsi
"MoonMan-Win64-Shipping.exe"+23C252: 48 8B CF              -  mov rcx,rdi
"MoonMan-Win64-Shipping.exe"+23C255: E8 26 74 53 00        -  call MoonMan-Win64-Shipping.exe+773680
"MoonMan-Win64-Shipping.exe"+23C25A: 48 8B 57 08           -  mov rdx,[rdi+08]
"MoonMan-Win64-Shipping.exe"+23C25E: 48 8B C8              -  mov rcx,rax
"MoonMan-Win64-Shipping.exe"+23C261: 48 8B D8              -  mov rbx,rax
"MoonMan-Win64-Shipping.exe"+23C264: E8 97 CE 51 00        -  call MoonMan-Win64-Shipping.exe+759100
// ---------- INJECTING HERE ----------
"MoonMan-Win64-Shipping.exe"+23C269: 4C 8B 0B              -  mov r9,[rbx]
"MoonMan-Win64-Shipping.exe"+23C26C: 4D 8B C4              -  mov r8,r12
// ---------- DONE INJECTING  ----------
"MoonMan-Win64-Shipping.exe"+23C26F: 48 8B D0              -  mov rdx,rax
"MoonMan-Win64-Shipping.exe"+23C272: 48 8B CB              -  mov rcx,rbx
"MoonMan-Win64-Shipping.exe"+23C275: 41 FF 91 00 02 00 00  -  call qword ptr [r9+00000200]
"MoonMan-Win64-Shipping.exe"+23C27C: 4C 8B 44 24 60        -  mov r8,[rsp+60]
"MoonMan-Win64-Shipping.exe"+23C281: FF C5                 -  inc ebp
"MoonMan-Win64-Shipping.exe"+23C283: E9 58 FF FF FF        -  jmp MoonMan-Win64-Shipping.exe+23C1E0
"MoonMan-Win64-Shipping.exe"+23C288: 4C 8B 44 24 60        -  mov r8,[rsp+60]
"MoonMan-Win64-Shipping.exe"+23C28D: 4D 85 C0              -  test r8,r8
"MoonMan-Win64-Shipping.exe"+23C290: 48 8D 4C 24 20        -  lea rcx,[rsp+20]
"MoonMan-Win64-Shipping.exe"+23C295: 49 0F 45 CD           -  cmovne rcx,r13
}
//code from here till the end of the code will be used to disable the cheat
godmode:
db 41 FF 54 C5 00
unregisterSymbol(godmode)
dealloc(newmem1)
{
// ORIGINAL CODE - INJECTION POINT: "MoonMan-Win64-Shipping.exe"+76C796

"MoonMan-Win64-Shipping.exe"+76C775: 48 8B CE                 -  mov rcx,rsi
"MoonMan-Win64-Shipping.exe"+76C778: FF 50 08                 -  call qword ptr [rax+08]
"MoonMan-Win64-Shipping.exe"+76C77B: 49 8B 46 20              -  mov rax,[r14+20]
"MoonMan-Win64-Shipping.exe"+76C77F: 49 8B D6                 -  mov rdx,r14
"MoonMan-Win64-Shipping.exe"+76C782: 4D 8B 46 38              -  mov r8,[r14+38]
"MoonMan-Win64-Shipping.exe"+76C786: 0F B6 08                 -  movzx ecx,byte ptr [rax]
"MoonMan-Win64-Shipping.exe"+76C789: 48 FF C0                 -  inc rax
"MoonMan-Win64-Shipping.exe"+76C78C: 49 89 46 20              -  mov [r14+20],rax
"MoonMan-Win64-Shipping.exe"+76C790: 8B C1                    -  mov eax,ecx
"MoonMan-Win64-Shipping.exe"+76C792: 49 8B 4E 18              -  mov rcx,[r14+18]
// ---------- INJECTING HERE ----------
"MoonMan-Win64-Shipping.exe"+76C796: 41 FF 54 C5 00           -  call qword ptr [r13+rax*8+00]
// ---------- DONE INJECTING  ----------
"MoonMan-Win64-Shipping.exe"+76C79B: 48 85 DB                 -  test rbx,rbx
"MoonMan-Win64-Shipping.exe"+76C79E: 74 22                    -  je MoonMan-Win64-Shipping.exe+76C7C2
"MoonMan-Win64-Shipping.exe"+76C7A0: 48 85 FF                 -  test rdi,rdi
"MoonMan-Win64-Shipping.exe"+76C7A3: 74 1D                    -  je MoonMan-Win64-Shipping.exe+76C7C2
"MoonMan-Win64-Shipping.exe"+76C7A5: 48 8B 47 38              -  mov rax,[rdi+38]
"MoonMan-Win64-Shipping.exe"+76C7A9: 48 C1 E8 24              -  shr rax,24
"MoonMan-Win64-Shipping.exe"+76C7AD: F6 D0                    -  not al
"MoonMan-Win64-Shipping.exe"+76C7AF: A8 01                    -  test al,01
"MoonMan-Win64-Shipping.exe"+76C7B1: 74 0F                    -  je MoonMan-Win64-Shipping.exe+76C7C2
"MoonMan-Win64-Shipping.exe"+76C7B3: 48 8B 07                 -  mov rax,[rdi]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1925</ID>
      <Description>"freeze timer(timer in the ship,works buggy a little)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Game   : MoonMan-Win64-Shipping.exe
  Version: 1.3.1.18219-CODEX
  Date   : 20.04.2020
  Author : AJlex

  This script does blah blah blah
}
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(timer2, MoonMan-Win64-Shipping.exe, F2 41 0F 58 87 40 01 00 00)
alloc(newmem,2048,timer2)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
movq xmm0,[new_value]

originalcode:
addsd xmm0,[r15+00000140]

exit:
jmp returnhere

new_value:
dq (double)0.008

timer2:
jmp newmem
nop 4
returnhere:

registerSymbol(timer2)
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
timer2:
db F2 41 0F 58 87 40 01 00 00
unregisterSymbol(timer2)
dealloc(newmem)
{
// ORIGINAL CODE - INJECTION POINT: "MoonMan-Win64-Shipping.exe"+184308E

"MoonMan-Win64-Shipping.exe"+1843055: E8 46 04 D8 FE              -  call MoonMan-Win64-Shipping.exe+5C34A0
"MoonMan-Win64-Shipping.exe"+184305A: 48 8B 05 7F 7B 43 01        -  mov rax,[MoonMan-Win64-Shipping.exe+2C7ABE0]
"MoonMan-Win64-Shipping.exe"+1843061: 49 39 87 50 01 00 00        -  cmp [r15+00000150],rax
"MoonMan-Win64-Shipping.exe"+1843068: 0F 84 32 08 00 00           -  je MoonMan-Win64-Shipping.exe+18438A0
"MoonMan-Win64-Shipping.exe"+184306E: 49 8B 8F 58 01 00 00        -  mov rcx,[r15+00000158]
"MoonMan-Win64-Shipping.exe"+1843075: 0F 57 C0                    -  xorps xmm0,xmm0
"MoonMan-Win64-Shipping.exe"+1843078: 48 89 B4 24 00 01 00 00     -  mov [rsp+00000100],rsi
"MoonMan-Win64-Shipping.exe"+1843080: 33 F6                       -  xor esi,esi
"MoonMan-Win64-Shipping.exe"+1843082: 4C 89 A4 24 D0 00 00 00     -  mov [rsp+000000D0],r12
"MoonMan-Win64-Shipping.exe"+184308A: F3 0F 5A C6                 -  cvtss2sd xmm0,xmm6
// ---------- INJECTING HERE ----------
"MoonMan-Win64-Shipping.exe"+184308E: F2 41 0F 58 87 40 01 00 00  -  addsd xmm0,[r15+00000140]
// ---------- DONE INJECTING  ----------
"MoonMan-Win64-Shipping.exe"+1843097: F2 41 0F 11 87 40 01 00 00  -  movsd [r15+00000140],xmm0
"MoonMan-Win64-Shipping.exe"+18430A0: 48 85 C9                    -  test rcx,rcx
"MoonMan-Win64-Shipping.exe"+18430A3: 74 0A                       -  je MoonMan-Win64-Shipping.exe+18430AF
"MoonMan-Win64-Shipping.exe"+18430A5: E8 86 FD C2 FF              -  call MoonMan-Win64-Shipping.exe+1472E30
"MoonMan-Win64-Shipping.exe"+18430AA: 4C 8B E0                    -  mov r12,rax
"MoonMan-Win64-Shipping.exe"+18430AD: EB 03                       -  jmp MoonMan-Win64-Shipping.exe+18430B2
"MoonMan-Win64-Shipping.exe"+18430AF: 4C 8B E6                    -  mov r12,rsi
"MoonMan-Win64-Shipping.exe"+18430B2: BA 01 00 00 00              -  mov edx,00000001
"MoonMan-Win64-Shipping.exe"+18430B7: 48 89 9C 24 F8 00 00 00     -  mov [rsp+000000F8],rbx
"MoonMan-Win64-Shipping.exe"+18430BF: 48 89 BC 24 08 01 00 00     -  mov [rsp+00000108],rdi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"freeze timer(launch procedure)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Game   : MoonMan-Win64-Shipping.exe
  Version: 1.3.1.18219-CODEX
  Date   : 20.04.2020
  Author : AJlex

  This script does blah blah blah
}
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
address_identifier = allocateSharedMemory("address_identifier",8)
aobresult = AOBScan("48 8B 07 4C 8B C5 48 8B D6 48 8B CF","+XW")
local counter = aobresult.Count - 1
if (aobresult.Count&gt;0) then
     writeBytes(address_identifier, qwordToByteTable(getAddress(aobresult[6])))
end
{$asm}
alloc(newmem,2048,[address_identifier])
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rdi+24C],(float)599

originalcode:
mov rax,[rdi]
mov r8,rbp

exit:
jmp returnhere

[address_identifier]:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
[address_identifier]:
db 48 8B 07 4C 8B C5
dealloc(address_identifier)
dealloc(newmem)
{
// ORIGINAL CODE - INJECTION POINT: "MoonMan-Win64-Shipping.exe"+10DFED9

"MoonMan-Win64-Shipping.exe"+10DFEB8: 48 8D 14 40           -  lea rdx,[rax+rax*2]
"MoonMan-Win64-Shipping.exe"+10DFEBC: 48 8B 05 B5 13 CA 01  -  mov rax,[MoonMan-Win64-Shipping.exe+2D81278]
"MoonMan-Win64-Shipping.exe"+10DFEC3: 48 8B 0C C8           -  mov rcx,[rax+rcx*8]
"MoonMan-Win64-Shipping.exe"+10DFEC7: 48 8D 04 D1           -  lea rax,[rcx+rdx*8]
"MoonMan-Win64-Shipping.exe"+10DFECB: EB 02                 -  jmp MoonMan-Win64-Shipping.exe+10DFECF
"MoonMan-Win64-Shipping.exe"+10DFECD: 33 C0                 -  xor eax,eax
"MoonMan-Win64-Shipping.exe"+10DFECF: 8B 40 08              -  mov eax,[rax+08]
"MoonMan-Win64-Shipping.exe"+10DFED2: C1 E8 1C              -  shr eax,1C
"MoonMan-Win64-Shipping.exe"+10DFED5: A8 01                 -  test al,01
"MoonMan-Win64-Shipping.exe"+10DFED7: 75 16                 -  jne MoonMan-Win64-Shipping.exe+10DFEEF
// ---------- INJECTING HERE ----------
"MoonMan-Win64-Shipping.exe"+10DFED9: 48 8B 07              -  mov rax,[rdi]
"MoonMan-Win64-Shipping.exe"+10DFEDC: 4C 8B C5              -  mov r8,rbp
// ---------- DONE INJECTING  ----------
"MoonMan-Win64-Shipping.exe"+10DFEDF: 48 8B D6              -  mov rdx,rsi
"MoonMan-Win64-Shipping.exe"+10DFEE2: 48 8B CF              -  mov rcx,rdi
"MoonMan-Win64-Shipping.exe"+10DFEE5: FF 90 00 02 00 00     -  call qword ptr [rax+00000200]
"MoonMan-Win64-Shipping.exe"+10DFEEB: B0 01                 -  mov al,01
"MoonMan-Win64-Shipping.exe"+10DFEED: EB 02                 -  jmp MoonMan-Win64-Shipping.exe+10DFEF1
"MoonMan-Win64-Shipping.exe"+10DFEEF: 32 C0                 -  xor al,al
"MoonMan-Win64-Shipping.exe"+10DFEF1: 48 8B 5C 24 30        -  mov rbx,[rsp+30]
"MoonMan-Win64-Shipping.exe"+10DFEF6: 48 8B 6C 24 38        -  mov rbp,[rsp+38]
"MoonMan-Win64-Shipping.exe"+10DFEFB: 48 8B 74 24 40        -  mov rsi,[rsp+40]
"MoonMan-Win64-Shipping.exe"+10DFF00: 48 83 C4 20           -  add rsp,20
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1962</ID>
      <Description>"inf. Flashlight"</Description>
      <VariableType>Byte</VariableType>
      <Address>flashlightFlag</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>1963</ID>
      <Description>"inf. Oxygen"</Description>
      <VariableType>Byte</VariableType>
      <Address>oxygenFlag</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
